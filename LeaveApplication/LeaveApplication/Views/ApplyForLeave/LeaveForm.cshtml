
@model LeaveApplication.Models.LeaveApplication

<!-- success meesage -->

@if (Convert.ToBoolean(TempData["Notify"]) == true)
{
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Notification</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Your response has been successfully submited...
                </div>
                <div class="modal-footer">
                    <a class="btn btn-danger btn-link" href="/ViewApplications/Index">View Response</a>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

<div class="container mt-5 mt-sm-5 mt-md-5 mt-lg-5 ">
    <div class="row  justify-content-center  ">

        <div class="col-12 col-sm-12 col-md-9 col-lg-6  ">


            @using (Html.BeginForm("Submit", "ApplyForLeave", FormMethod.Post, new { id = "form1", onsubmit = "return OnSubmit()", autocomplete = "off", enctype = "multipart/form-data" }))
            {

                <div class="card ">
                    <div class="card-header card-header-info">
                        <div class="row">
                            @if (ViewBag.ViewID == 1)
                            {
                                <div class="col">
                                    <div class="custom-control custom-radio">
                                        <input type="radio" id="customRadio1" name="IsHalfDay" class="custom-control-input" value="0">
                                        <label class="custom-control-label text-white" for="customRadio1">Full day</label>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="custom-control custom-radio">
                                        <input type="radio" id="customRadio2" name="IsHalfDay" class="custom-control-input" value="1" checked>
                                        <label class="custom-control-label text-white" for="customRadio2">Half Day</label>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="col">
                                    <div class="custom-control custom-radio">
                                        <input type="radio" id="customRadio1" name="IsHalfDay" class="custom-control-input" value="0" checked>
                                        <label class="custom-control-label text-white" for="customRadio1">Full day</label>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="custom-control custom-radio">
                                        <input type="radio" id="customRadio2" name="IsHalfDay" class="custom-control-input" value="1">
                                        <label class="custom-control-label text-white" for="customRadio2">Half Day</label>
                                    </div>
                                </div>
                            }
                        </div>


                    </div>
                    <div class=" card-body ">

                        <label style="font-size:22px" id="date" for="">Date Of Application: @System.DateTime.Now.Date.ToString("dd-MM-yyyy")</label>
                        <br><br>

                        <div class="d-flex justify-content-center">

                        </div>
                        <div class="d-flex justify-content-center">
                            <div class="form-group col-8 ">
                                <label class="label-control "> Select Leave</label>
                                @{
                                    List<SelectListItem> l1 = new List<SelectListItem>();
                                    l1.Add(new SelectListItem() { Text = "Select Leave Type", Value = "", Disabled = true, Selected = true });
                                    foreach (LeaveApplication.Models.LeaveTypes x in ViewBag.Leavetypes)
                                    {
                                        l1.Add(new SelectListItem() { Text = @x.LeaveType, Value = x.LeaveTypeID.ToString() });

                                    }

                                }

                                @Html.DropDownListFor(m => m.LeaveType, l1, new { @class = "custom-select", required = "required" })

                                @Html.ValidationMessageFor(m => m.LeaveType, "", new { @class = "text-danger" })



                            </div>
                        </div>


                        @{if (ViewBag.ViewID == 0)
                            {<div class="d-flex justify-content-center ">
                                    <div class="form-group col-8">
                                        <label class="control-label">From</label>
                                        <div class="form-group">
                                            <div class="input-group ">
                                                @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control datetimepicker ", required = "required", onfocusout = "DateSelect(this)" })

                                                <div class="input-group-append">
                                                    <span style="margin-left:-20px"><img id="i1" src="~/Images/calendar-clipart-w4.png" width="25" /></span>
                                                </div>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.FromDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="d-flex justify-content-center ">
                                    <div class="form-group col-8">
                                        <label for="date2" id="l3">To</label>
                                        <div class="form-group">
                                            <div class="input-group ">
                                                @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control datetimepicker ", required = "required", onfocusout = "DateSelect(this)" })


                                                <div class="input-group-append">
                                                    <span style="margin-left:-20px"><img id="i1" src="~/Images/calendar-clipart-w4.png" width="25" /></span>

                                                </div>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.ToDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class=" d-flex justify-content-center">
                                    <div class=" form-group col-8">
                                        <label for="days">Total Days</label>
                                        <input class="form-control" type="text" name="days" id="days" value="" readonly>

                                    </div>
                                </div>


                            }
                            else if (ViewBag.ViewID == 1)
                            { <div class="d-flex justify-content-center ">
                                    <div class="form-group col-8">
                                        <label class="label-control" id="hf1">From date</label>
                                        <div class="form-group">
                                            <div class="input-group ">
                                                @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control datetimepicker ", required = "required" })



                                                <div class="input-group-append">
                                                    <span style="margin-left:-20px"><img id="i1" src="~/Images/calendar-clipart-w4.png" width="25" /></span>

                                                </div>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.FromDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="d-flex justify-content-center ">
                                    <div class="form-group col-8">
                                        <label class="label-control " id="hf1">From time</label>
                                        <div class="form-group">
                                            <div class="input-group ">
                                                @Html.TextBoxFor(m => m.FromTime, new { @class = "form-control datetimepicker2", required = "required" })



                                                <div class="input-group-append">
                                                    <span style="margin-left:-20px"><img id="i1" src="~/Images/calendar-clipart-w4.png" width="25" /></span>

                                                </div>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.FromTime, "", new { @class = "text-danger" })

                                    </div>
                                </div>


                                <div class="d-flex justify-content-center ">
                                    <div class="form-group col-8">
                                        <label class="label-control " id="hf2">To time</label>
                                        <div class="form-group">
                                            <div class="input-group ">

                                                @Html.TextBoxFor(m => m.ToTime, new { @class = "form-control datetimepicker2", required = "required" })

                                                <div class="input-group-append">
                                                    <span style="margin-left:-20px"><img id="i1" src="~/Images/calendar-clipart-w4.png" width="25" /></span>

                                                </div>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.FromTime, "", new { @class = "text-danger" })

                                    </div>
                                </div>



                                <div class=" d-flex justify-content-center">
                                    <div class=" form-group col-8">
                                        <label for="days" class="">Total Days</label>
                                        <input class="form-control" type="text" name="days" id="days" value="0.5" readonly>

                                    </div>
                                </div>




                            }
                            if (ViewBag.HrsError == true)
                            {
                                <div id="alert" class=" alert alert-danger  fade-in">

                                    <strong>Error!</strong> Exceeds hours Limitation
                                </div>
                            }
                        }



                        <div class="d-flex justify-content-center">
                            <div class="form-group col-8 ">
                                @{
                                    l1 = new List<SelectListItem>();
                                    System.Data.DataSet i = ViewBag.Reasons;
                                    l1.Add(new SelectListItem() { Text = "Select leave reasons", Disabled = true, Selected = true, Value = "" });
                                    foreach (System.Data.DataRow x in i.Tables[0].Rows)
                                    {

                                        l1.Add(new SelectListItem() { Text = x[1].ToString(), Value = x[0].ToString() });

                                    }
                                }
                                <label class="label-control "> Reason</label>
                                @Html.DropDownListFor(m => m.LeaveReason, l1, new { @class = "custom-select", required = "required" })

                                @Html.ValidationMessageFor(m => m.LeaveReason, "", new { @class = "text-danger" })


                            </div>
                        </div>

                        <div class="d-flex justify-content-center">
                            <div class="form-group col-8">
                                <label class="label-control" for="LeaveRemarks"> Enter Description</label><br />
                                <div class="p-1" style="border:solid 1px #A9A9A9">
                                    @Html.TextAreaFor(m => m.LeaveRemarks, new { @class = "form-control", style = "resize:none", cols = "30", rows = "5", placeholder = "Enter Description if any." })

                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="fileinput fileinput-new text-center " data-provides="fileinput">


                                <div>
                                    <span id="s1" class="col-10 btn btn-raised btn-round btn-outline-info  btn-file">
                                        <span class="fileinput-new">Add Your Attachments Empty...</span>


                                    </span>
                                    @*<a href="#pablo" class="btn btn-danger btn-round fileinput-exists" data-dismiss="fileinput"><i class="fa fa-times"></i> Remove</a>*@

                                    <input type="file" name="Attachment" id="Attachment" hidden />
                                </div>
                            </div>
                        </div>


                    </div>
                    <div class="d-flex justify-content-center card-footer">

                        <input id="Submit1" class="btn btn-round btn-info-grd col-lg-10" type="submit" value="submit" />



                    </div>

                </div>

            }





        </div>

    </div>

</div>



<script>

    $(document).ready(function () {

        if (document.getElementById("exampleModalCenter")) {
            $('#exampleModalCenter').modal('show');
        }
        if (document.getElementById("alert")) {
            setTimeout(Hide, 3000)
        }
        $('#s1').click(function () {
            $('#Attachment').trigger('click');
        });
        $('#Attachment').change(function () {
            document.getElementById('s1').innerHTML = document.getElementById('Attachment').files.item(0).name;

        });
        function Hide() {
            $('#alert').hide('fade');
        }
        $('#customRadio1').click(function () {

            GetView(0);
        });
        $('#customRadio2').click(function () {


            GetView(1);
        });


        $('.datetimepicker').datetimepicker({
            format: 'DD/MM/YYYY',

            icons: {
                time: "fa fa-clock-o",
                date: "fa fa-calendar",
                up: "fa fa-chevron-up",
                down: "fa fa-chevron-down",
                previous: 'fa fa-chevron-left',
                next: 'fa fa-chevron-right',
                today: 'fa fa-screenshot',
                clear: 'fa fa-trash',
                close: 'fa fa-remove',

            }

        });

        $('.datetimepicker2').datetimepicker({
            format: 'LT',
            icons: {
                time: "fa fa-clock-o",
                date: "fa fa-calendar",
                up: "fa fa-chevron-up",
                down: "fa fa-chevron-down",
                previous: 'fa fa-chevron-left',
                next: 'fa fa-chevron-right',
                today: 'fa fa-screenshot',
                clear: 'fa fa-trash',
                close: 'fa fa-remove',

            }

        });
        function OnSubmit() {
            if ($('#LeaveType').val() == null || $('#halfday').val() == null || $('#FromDate').val() == null || $('#ToDate').val() == null || $('#LeaveReason').val() == null) {
                alert("Kindly Fill all the fields");
                return false;
            }
        }
        function GetView(ViewId) {
            $('#empdiv').html('');
            $.ajax({
                type: "post",
                url: "/ApplyForLeave/GetView?ViewId=" + ViewId,

                success: function (html) {

                    $('#empdiv').html(html);

                }


            })
        }
    });
    var Date1 = null;
    var Date2 = null;
    if ($('#ToDate').length && $('#FromDate').length) {
        if ($('#FromDate').val().length != 0 && $('#ToDate').val().length != 0) {
            Date1 = $('#FromDate').val();
            Date2 = $('#ToDate').val();
        }
    }

    function DateSelect(date) {

        var LeaveDetails = { FromDate: "", ToDate: "" };

        if (date.name == "FromDate") {
            Date1 = date.value;
            LeaveDetails.FromDate = Date1;
            LeaveDetails.ToDate = Date2;

        }
        else {
            Date2 = date.value;
            LeaveDetails.FromDate = Date1;
            LeaveDetails.ToDate = Date2;
        }


        if ((Date1 != null && Date1 != "") && (Date2 != null && Date2 != "")) {

            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = fun;
            function fun() {
                if (this.readyState == 4 && this.status == 200) {

                    var x = JSON.parse(this.responseText);

                    document.getElementById("days").value = x;

                }
            };
            xmlhttp.open("POST", "/ApplyForLeave/Calculateadays", true);
            xmlhttp.setRequestHeader("Content-Type", "application/json");
            xmlhttp.send(JSON.stringify(LeaveDetails));
        }


    }

</script>
