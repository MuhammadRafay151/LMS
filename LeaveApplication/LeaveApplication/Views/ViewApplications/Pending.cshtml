@model System.Data.DataSet
<script>
    function fun(row) {
        console.log(document.getElementById('t1').rows.length);
        console.log(row.rowIndex);
        var Application_Id = document.getElementById('t1').rows[row.rowIndex].cells[0].innerHTML;
        console.log(Application_Id);
        window.location.href = "/ViewApplications/EditDetails?Application_Id=" + Application_Id;
    }
    function View(row) {
        var Application_Id = document.getElementById('t1').rows[row.rowIndex].cells[0].innerHTML;
        window.location.href = "/ViewApplications/DetiledView?Application_Id=" + Application_Id;

    }
    function CancelApplication(row) {
        var Application_Id = document.getElementById('t1').rows[row.rowIndex].cells[0].innerHTML;

        $('#f1').click(function () {
            window.location.href = "/ViewApplications/CancelApplication?Application_Id=" + Application_Id;
        });

    }
    function Accept(row) {
        var Application_Id = document.getElementById('t1').rows[row.rowIndex].cells[0].innerHTML;
        $('#app_id').val(Application_Id);
        $('#ar1').attr('action', '/ViewApplications/AcceptApplication');
        //   window.location.href = "/ViewApplications/AcceptApplication?Application_Id=" + Application_Id;

    }
    function Reject(row) {
        var Application_Id = document.getElementById('t1').rows[row.rowIndex].cells[0].innerHTML;
        $('#app_id').val(Application_Id);
        $('#ar1').attr('action', '/ViewApplications/RejectApplication');
        //  window.location.href = "/ViewApplications/RejectApplication?Application_Id=" + Application_Id;

    }
    function CloseRemark() {
        $('#ar1').attr('action', '')
        $('#app_id').val(null);
    }
</script>
@* Model for cancel*@
<div class="modal fade " id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Cancel</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick=" $('#f1').prop('onclick', null)">
                    <span aria-hidden="true">&times;</span>
                </button>

            </div>
            <div class="modal-body">
                <p>Do you really want to cancel application ?</p>

            </div>
            <div class="modal-footer">


                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick=" $('#f1').prop('onclick', null)">No</button>
                <button id="f1" type="submit" class="btn btn-info-grd">Yes</button>


            </div>


        </div>
    </div>
</div>
@* -------------------------------- *@
@* Model for Approve/ Reject*@
@Html.Partial("ApproveRejectModel");
@* -------------------------------- *@
<div class="container-fluid " id="a1">

    <div class="row ">
        <div class="col ">
            <div class="card h-100">
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="t1" class="table table-hover table-light">
                            <thead>
                                <tr>
                                    <th class="align-middle  text-center" hidden scope="col">Application ID</th>
                                    @{
                                        if (ViewBag.Manager == true)
                                        {
                                            <th class="align-middle  text-center" scope="col">Name</th>
                                        }
                                    }
                                    <th class="align-middle  text-center" scope="col">Date</th>
                                    <th class="align-middle  text-center" scope="col">Application Type</th>
                                    <th class="align-middle  text-center" scope="col">Leave Type</th>
                                    <th class="align-middle  text-center" scope="col">From Date</th>
                                    <th class="align-middle  text-center" scope="col">To Date</th>
                                    <th class="align-middle  text-center" scope="col">Total Days</th>
                                    <th class="align-middle  text-center" scope="col">Reason for leave</th>
                                    <th class="align-middle  text-center" scope="col">Application Status</th>
                                    <th class="align-middle  text-center" scope="col">View Details</th>
                                    @{ if (ViewBag.Manager == true)
                                        {
                                            <th class="align-middle  text-center" scope="col">Accept</th>
                                            <th class="align-middle  text-center" scope="col">Reject</th>
                                        }
                                        else
                                        {
                                            <th class="align-middle  text-center" scope="col">Edit</th>
                                            <th class="align-middle  text-center" scope="col">Cancel Application</th>
                                        }
                                    }

                                </tr>
                            </thead>
                            <tbody>
                                @{ bool check = false;
                                    System.Data.DataSet temp = Model;
                                    foreach (System.Data.DataRow x in temp.Tables[0].Rows)
                                    {
                                        <tr>

                                            <td hidden class="align-middle  text-center">@LeaveApplication.Models.Encryption.Base64Encode(x[0].ToString())</td>
                                            @{
                                                if (ViewBag.Manager == true)
                                                {
                                                    <td class="align-middle  text-center">@x[9].ToString()</td>
                                                }
                                            }
                                            <td class="align-middle  text-center">@DateTime.Parse(x[2].ToString()).ToString("dd-MM-yyyy")</td>
                                            @if (bool.Parse(x[8].ToString()) == false)
                                            {
                                                <td class="align-middle  text-center">Application</td>
                                            }
                                            else
                                            {
                                                <td class="align-middle  text-center">Request</td>
                                            }
                                            <td class="align-middle  text-center">@x[1].ToString()</td>
                                            @if (double.Parse(x[5].ToString()) == 0.5)
                                            {//render date and time when half day else render date only
                                                <td class="align-middle  text-center">@DateTime.Parse(x[3].ToString()).ToString("dd/MM/yyyy HH: mm tt")</td>
                                                <td class="align-middle  text-center">@DateTime.Parse(x[4].ToString()).ToString("dd/MM/yyyy HH: mm tt")</td>
                                            }
                                            else
                                            {
                                                <td class="align-middle  text-center">@DateTime.Parse(x[3].ToString()).ToString("dd-MM-yyyy")</td>
                                                <td class="align-middle  text-center">@DateTime.Parse(x[4].ToString()).ToString("dd-MM-yyyy")</td>
                                            }
                                            <td class="align-middle  text-center">@x[5].ToString()</td>
                                            <td class="align-middle  text-center">@x[6].ToString()</td>
                                            <td class="align-middle text-center">
                                                <span class="badge badge-warning" style="font-size:15px">Pending</span>
                                            </td>
                                            <td class="align-middle  text-center">
                                                <button type="button" class="btn btn-info-grd" onclick="View(this.parentNode.parentNode)">View</button>
                                            </td>
                                            @{
                                                if (ViewBag.Manager == true)
                                                {
                                                    <td class="align-middle text-center">
                                                        <button type="button" class="btn  btn-info-grd" data-toggle="modal" data-target="#remark" onclick="Accept(this.parentNode.parentNode)" id="accept">Accept</button>
                                                    </td>
                                                    <td class="align-middle text-center">
                                                        <button type="button" class="btn btn-info-grd" data-toggle="modal" data-target="#remark" onclick="Reject(this.parentNode.parentNode)" id="reject">Reject</button>
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td class="align-middle  text-center">
                                                        @*@Html.ActionLink("hh","EditDetails",new {a="app" })*@
                                                        <button type="button" class="btn btn-info-grd" onclick="fun(this.parentNode.parentNode)">Edit</button>
                                                    </td>
                                                    <td class="align-middle  text-center">
                                                        <button type="button" class="btn btn-info-grd" data-toggle="modal" data-target="#exampleModalCenter" onclick="CancelApplication(this.parentNode.parentNode);">Cancel</button>
                                                    </td>


                                                }
                                            }


                                        </tr>
                                        check = true;
                                    }

                                }




                            </tbody>
                        </table>
                    </div>

                </div>

                @{
                    if (check == false)
                    {
                        <h1 class="text-center align-middle">Records Not Found</h1>
                    }
                    else
                    {<div class="card-footer justify-content-end">

                            <ul id="paged" class="pagination pagination-info ">
                                @{

                                    <li class="page-item ">
                                        @{
                                            if (ViewContext.RouteData.Values["action"].ToString() == "Pending")
                                            {
                                                @Ajax.ActionLink("First", "Pending", new { PageNo = 1 }, new AjaxOptions
                      {
                      HttpMethod = "GET",
                      UpdateTargetId = "div1",
                      InsertionMode = InsertionMode.Replace
                      }, new { @class = "page-link" })
                                            }
                                            else
                                            {
                                                @Ajax.ActionLink("First", "FacultyPending", new { PageNo = 1 }, new AjaxOptions
{
HttpMethod = "GET",
UpdateTargetId = "div1",
InsertionMode = InsertionMode.Replace
}, new { @class = "page-link" })
                                            }
                                        }

                                    </li>
                                    <li class="page-item ">
                                        @{
                                            if (ViewContext.RouteData.Values["action"].ToString() == "Pending")
                                            {
                                                @Ajax.ActionLink("Previous", "Pending", null, new AjaxOptions
                      {
                      HttpMethod = "GET",
                      UpdateTargetId = "div1",
                      InsertionMode = InsertionMode.Replace
                      }, new { @class = "page-link", id = "pre", onclick = "Pre('/ViewApplications/Pending?PageNo=')" })
                                            }
                                            else
                                            {
                                                @Ajax.ActionLink("Previous", "FacultyPending", null, new AjaxOptions
                      {
                      HttpMethod = "GET",
                      UpdateTargetId = "div1",
                      InsertionMode = InsertionMode.Replace
                      }, new { @class = "page-link", id = "pre", onclick = "Pre('/ViewApplications/FacultyPending?PageNo=')" })
                                            }
                                        }

                                    </li>

                                    int ax = ViewBag.PageNo;
                                    if (ViewBag.TotalPages <= 3)
                                    {
                                        ax = 1;
                                    }
                                    else if (ViewBag.TotalPages - ViewBag.PageNo == 1)
                                    {
                                        ax -= 1;
                                    }
                                    else if (ViewBag.TotalPages - ViewBag.PageNo == 0)
                                    {
                                        ax -= 2;
                                    }
                                    int count = 0;
                                    for (int i = ax; i <= ViewBag.TotalPages; i++)
                                    {
                                        if (i == ViewBag.PageNo)
                                        {
                                            <li class="page-item active">
                                                @{
                                                    if (ViewContext.RouteData.Values["action"].ToString() == "Pending")
                                                    {
                                                        @Ajax.ActionLink(i.ToString(), "Pending", new { PageNo = i }, new AjaxOptions
                                         {
                                             HttpMethod = "GET",
                                             UpdateTargetId = "div1",
                                             InsertionMode = InsertionMode.Replace
                                         }, new { @class = "page-link" })
                                                    }
                                                    else
                                                    {
                                                        @Ajax.ActionLink(i.ToString(), "FacultyPending", new { PageNo = i }, new AjaxOptions
                                                         {
                                                             HttpMethod = "GET",
                                                             UpdateTargetId = "div1",
                                                             InsertionMode = InsertionMode.Replace
                                                         }, new { @class = "page-link" })
                                                    }
                                                }

                                            </li>

                                        }
                                        else
                                        {
                                            <li class="page-item ">
                                                @{
                                                    if (ViewContext.RouteData.Values["action"].ToString() == "Pending")
                                                    {
                                                        @Ajax.ActionLink(i.ToString(), "Pending", new { PageNo = i }, new AjaxOptions
                                      {
                                      HttpMethod = "GET",
                                      UpdateTargetId = "div1",
                                      InsertionMode = InsertionMode.Replace
                                      }, new { @class = "page-link" })
                                                    }
                                                    else
                                                    {
                                                        @Ajax.ActionLink(i.ToString(), "FacultyPending", new { PageNo = i }, new AjaxOptions
                                                      {
                                                      HttpMethod = "GET",
                                                      UpdateTargetId = "div1",
                                                      InsertionMode = InsertionMode.Replace
                                                      }, new { @class = "page-link" })
                                                    }
                                                }

                                            </li>

                                        }
                                        ++count;
                                        if (count == 3)
                                        {
                                            break;
                                        }

                                    }
                                    <li class="page-item">
                                        @{
                                            if (ViewContext.RouteData.Values["action"].ToString() == "Pending")
                                            {
                                                @Ajax.ActionLink("Next", "Pending", null, new AjaxOptions
                               {
                               HttpMethod = "GET",
                               UpdateTargetId = "div1",
                               InsertionMode = InsertionMode.Replace
                               }, new { @class = "page-link", id = "next", onclick = "Next('/ViewApplications/Pending?PageNo=')" })
                                            }
                                            else
                                            {
                                                @Ajax.ActionLink("Next", "FacultyPending", null, new AjaxOptions
                                       {
                                       HttpMethod = "GET",
                                       UpdateTargetId = "div1",
                                       InsertionMode = InsertionMode.Replace
                                       }, new { @class = "page-link", id = "next", onclick = "Next('/ViewApplications/FacultyPending?PageNo=')" })
                                            }
                                        }

                                    </li>
                                    <li class="page-item ">
                                        @{
                                            if (ViewContext.RouteData.Values["action"].ToString() == "Pending")
                                            {
                                                @Ajax.ActionLink("Last", "Pending", new { PageNo = @ViewBag.TotalPages }, new AjaxOptions
                               {
                               HttpMethod = "GET",
                               UpdateTargetId = "div1",
                               InsertionMode = InsertionMode.Replace
                               }, new { @class = "page-link" })
                                            }
                                            else
                                            {
                                                @Ajax.ActionLink("Last", "FacultyPending", new { PageNo = @ViewBag.TotalPages }, new AjaxOptions
                                       {
                                       HttpMethod = "GET",
                                       UpdateTargetId = "div1",
                                       InsertionMode = InsertionMode.Replace
                                       }, new { @class = "page-link" })
                                            }
                                        }

                                    </li>


                                }

                            </ul>
                        </div>

                    }
                }


            </div>
        </div>
    </div>
</div>


